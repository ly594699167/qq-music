{"version":3,"sources":["webpack://music/./src/css/index.less","webpack://music/./src/js/Audio.js","webpack://music/./src/js/Music.js","webpack://music/./src/js/Progress.js","webpack://music/./src/js/Render.js","webpack://music/./src/js/listContro.js","webpack://music/./src/js/serIndex.js","webpack://music/./src/public/js/gaussBlur.js","webpack://music/webpack/bootstrap","webpack://music/webpack/runtime/compat get default export","webpack://music/webpack/runtime/define property getters","webpack://music/webpack/runtime/hasOwnProperty shorthand","webpack://music/webpack/runtime/make namespace object","webpack://music/./src/index.js"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;ACAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,iEAAe,iBAAiB,E;;;;;;;;;;;;;;;;;;;;ACnCH;AACF;AACG;AACQ;AACV;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kDAAO;;AAE1B;AACA;AACA;;AAEA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAAgC,oDAAW;AAC3C;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,QAAQ,iDAAM;AACd,QAAQ,gDAAU;AAClB;AACA;;AAEA;AACA;AACA,YAAY,kDAAY;AACxB,YAAY,gDAAU;AACtB;AACA;AACA,8B;AACA;AACA,6B;AACA;AACA;AACA;AACA,QAAQ,+CAAS;AACjB;AACA,SAAS;;AAET,KAAK;AACL;AACA;AACA,6DAA6D;AAC7D,oEAAoE;AACpE,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAY;AACxB;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB,kDAAY;AAC5B,gBAAgB,iDAAW;AAC3B;AACA;AACA;;AAEA,aAAa;AACb;AACA,gBAAgB,gDAAU;AAC1B;AACA;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;AACA,YAAY,kDAAY;AACxB;AACA,SAAS;;AAET,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,oBAAoB,4DAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kDAAY;AAC5B;AACA;AACA;;AAEA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,wBAAwB,mDAAQ;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,kDAAY;AACzB,YAAY,gDAAU;AACtB;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,iEAAe,0CAA0C,EAAC;;;;;;;;;;;;;;;;;;;AC1L1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,iEAAe;AACf;AACA;AACA,C;;;;;;;;;;;;;;;;;AC5J+B;AAC/B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAAe,oCAAS;AACxB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA,CAAC,iEAAe;AAChB;AACA,E;;;;;;;;;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe;AACf;AACA,C;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B,aAAa;AACvC;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA,aAAa,YAAY;AACzB,cAAc,WAAW;AACzB;AACA;AACA,qBAAqB,aAAa;AAClC;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB,cAAc,YAAY;AAC1B;AACA;AACA,qBAAqB,aAAa;AAClC;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC,sCAAsC;;;;;;;UCzGvC;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,gCAAgC,YAAY;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;;;ACNyB;AACK;AAC9B,mDAAU,G","file":"js/index.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","//音乐加载功能\r\n\r\nfunction AudioManage(){\r\n        this.audio = new Audio();\r\n    //gang开始为暂停状态\r\n    this.status = 'pause'\r\n}\r\nAudioManage.prototype = {\r\n    //音乐加载\r\n    load(src){\r\n        this.audio.src = src\r\n        this.audio.load();\r\n        console.log(src,'音乐路径')\r\n       \r\n    },\r\n    //音乐播放\r\n    play(){\r\n        this.audio.play();\r\n        this.status  = 'play'\r\n    },\r\n    //音乐暂停\r\n    pause(){\r\n        this.audio.pause();\r\n        this.status = 'pause'\r\n    },\r\n    end(fn){\r\n        console.log('哈哈')\r\n        this.audio.onended = fn;\r\n    },\r\n    //时间跳转到某一个节点\r\n    playTo(time){\r\n        \r\n        this.audio.currentTime = time;\r\n    }\r\n}\r\nexport default new AudioManage();","import render from './Render'\r\nimport Audio from './Audio'\r\nimport Index from './serIndex'\r\nimport listControl from './listContro'\r\nimport Pro from './Progress'\r\n\r\nfunction Music(dom) {\r\n    this.dom = dom;\r\n    //获取下标\r\n    // this.next = 1;\r\n    //用于获取添加的数组\r\n    this.data = [];\r\n    //当前的歌曲索引下标\r\n    this.curIndex = 0;\r\n    //唱片旋转的定时器\r\n    this.rotateTimer = null;\r\n    //图片旋转的角度\r\n    this.deg = 0;\r\n    //索引值对象\r\n    this.indexObj = null;\r\n    //歌曲列表\r\n    this.list = 0;\r\n    //进度条对象\r\n    this.pro = new Pro.pro();\r\n\r\n}\r\nMusic.prototype = {\r\n    init() {\r\n\r\n        this.getDom();\r\n        this.getData();\r\n        this.musicControl()\r\n\r\n    },\r\n    //获取数据函数\r\n    async getData() {\r\n        const Asyncdata = await fetch('../public/mock/data.json')\r\n        this.data = await Asyncdata.json();\r\n\r\n        //数据获取成功\r\n        if (this.data) {\r\n            // //列表执行\r\n            this.listPlay();\r\n            //获取索引对象\r\n            this.indexObj = new Index.Index(this.data.length)\r\n            this.loadMusic(this.indexObj.index);\r\n            //拖拽功能\r\n            this.dragPlay();\r\n           \r\n            // Audio.end(this.loadMusic(this.indexObj.pre())\r\n        }\r\n    },\r\n    //音乐加载\r\n    loadMusic(index) {\r\n        let That = this\r\n        render(this.data[index]);\r\n        Audio.load(this.data[index].audioSrc);\r\n        //进度条渲染\r\n        this.pro.init();\r\n       \r\n        //进度条总时间渲染\r\n        this.pro.renderTimge(this.data[index].duration)\r\n        if (Audio.status === 'play') {\r\n            Audio.play();\r\n            this.controlBtns[2].className = 'playing'\r\n            //图片旋转\r\n            this.imgRotate(0);     \r\n           //切割时进度条必须跟着走\r\n            this.pro.move(0);   \r\n        }\r\n        this.list.changeselect(index);\r\n        this.curIndex = index;\r\n        Audio.end(function(){\r\n            That.loadMusic(That.indexObj.next())\r\n        })\r\n\r\n    },\r\n    //获取元素\r\n    getDom() {\r\n        this.record = document.querySelector('.songImg img');\t//旋转图片\r\n        this.controlBtns = document.querySelectorAll('.control li');\t//底部导航里的按钮\r\n    },\r\n    \r\n    //播放,上一首,下一首\r\n    musicControl() {\r\n        const That = this;\r\n        //上一首\r\n        this.controlBtns[1].addEventListener('touchend', function () {\r\n            Audio.status = 'play'\r\n            That.loadMusic(That.indexObj.pre());\r\n        })\r\n        //播放功能\r\n        this.controlBtns[2].addEventListener('touchend', function () {\r\n            //当是播放状态时\r\n            if (Audio.status === 'play') {\r\n                Audio.pause();\r\n                this.className = '';\r\n                That.stopRotate();\r\n                That.pro.stop();\r\n\r\n            } else {\r\n                //暂停状态\r\n                Audio.play();\r\n                this.className = 'playing';\r\n                // Audio.end(function(){\r\n                //     That.loadMusic(That.indexObj.next())\r\n                // })\r\n                That.imgRotate(That.deg);\r\n                That.pro.move();\r\n\r\n            }\r\n\r\n        })\r\n        //下一首\r\n        this.controlBtns[3].addEventListener('touchend', function () {\r\n            Audio.status = 'play';\r\n            That.loadMusic(That.indexObj.next());\r\n        })\r\n\r\n    },\r\n    //图片旋转\r\n    imgRotate(deg) {\r\n        const that = this;\r\n        clearInterval(this.rotateTimer);\r\n        this.rotateTimer = setInterval(() => {\r\n            deg = deg + 0.2;\r\n            that.record.style.transform = 'rotate(' + deg + 'deg)';\r\n            that.deg = deg;\r\n        }, 1000 / 60)\r\n    },\r\n    //图片旋转停止\r\n    stopRotate() {\r\n        clearInterval(this.rotateTimer);\r\n    },\r\n    //列表操作\r\n    listPlay() {\r\n        const That = this;\r\n\r\n        this.list = listControl.listControl(this.dom, this.data);\r\n        console.log(this.list)\r\n        //列表显示功能\r\n        this.controlBtns[4].addEventListener('touchend', function () {\r\n            console.log(That.list)\r\n            That.list.slideUp();\r\n        })\r\n        //列表中的歌曲绑定事件\r\n        this.list.musicList.forEach((item, index) => {\r\n            item.addEventListener('touchend', () => {\r\n                if (That.curIndex === index) {\r\n                    return;\r\n                }\r\n                Audio.status = 'play';\r\n                That.indexObj.index = index;\r\n                That.loadMusic(index);\r\n                That.list.slideDown();\r\n\r\n            })\r\n        })\r\n    },\r\n    //进行拖拽操作\r\n    dragPlay() {\r\n        const That = this;\r\n        //获取拖拽对象\r\n        this.drag = new Pro.drag(document.querySelector('.circle'));\r\n        this.drag.start = function () {\r\n            //进度条暂停\r\n            That.pro.stop();\r\n\r\n        }\r\n        this.drag.move = function (per) {\r\n            //进度条变化\r\n            That.pro.move(per)\r\n        }\r\n        this.drag.end = function (per) {\r\n            let time = That.data[That.indexObj.index].duration* per;\r\n             Audio.playTo(time)\r\n            Audio.play();\r\n            That.controlBtns[2].className = 'playing';\r\n            // Audio.status = 'pause'\r\n            That.imgRotate(That.deg);\r\n            That.pro.move(per);\r\n        }\r\n    }\r\n\r\n\r\n}\r\nexport default new Music(document.getElementById('wrap'));\r\n\r\n\r\n\r\n","function Progress() {\r\n    //总的时长\r\n    this.allTime = 0;\r\n    //开始的时长\r\n    this.startTime = 0;\r\n    //百分数\r\n    this.per = 0;\r\n    //定时器\r\n    this.timer = null;\r\n    //暂停后的百分比\r\n    this.endPer = 0;\r\n}\r\nProgress.prototype = {\r\n    init() {\r\n        this.getDom();\r\n    },\r\n    //获取dom元素\r\n    getDom() {\r\n        this.curTime = document.querySelector('.curTime');\r\n        this.circle = document.querySelector('.circle');\r\n        this.frontBg = document.querySelector('.frontBg');\r\n        this.totalTime = document.querySelector('.totalTime');\r\n      \r\n    },\r\n    //时间渲染\r\n    renderTimge(time) {\r\n       \r\n        this.allTime = time;\r\n        time = this.changeTime(time);\r\n        this.totalTime.innerHTML = time;\r\n    },\r\n    //时间转换\r\n    changeTime(time) {\r\n  \r\n        time = Math.round(time);\r\n   \r\n        var m = Math.floor(time / 60);\r\n        var s = time % 60;\r\n        m = m < 10 ? '0' + m : m;\r\n        s = s < 10 ? '0' + s : s;\r\n        return m + \":\" + s;\r\n    },\r\n    //进度条移动\r\n    move(per){\r\n   \r\n        //清理定时器\r\n        cancelAnimationFrame(this.timer);\r\n        const That = this;\r\n        //点击播放时的时间\r\n        this.endPer = per === undefined?this.endPer : per ;\r\n   \r\n        this.startTime = new Date().getTime();\r\n        //歌曲开始\r\n        function frame(){\r\n            //获取当前时间\r\n            let curTime = new Date().getTime();\r\n            //获得百分比,*1000转换成毫秒,加上暂停后的百分比\r\n            const per =That.endPer + (curTime - That.startTime)/(That.allTime*1000);\r\n            if(per<=1){\r\n                //进行改变\r\n                That.update(per);\r\n            } else{\r\n                //清理定时器\r\n                cancelAnimationFrame(That.timer);\r\n            }\r\n            That.timer = requestAnimationFrame(frame);\r\n        }\r\n        frame();\r\n    },\r\n    //进度条改变\r\n    update(per){\r\n        //左边的时间\r\n        let curtime = this.changeTime(this.allTime*per)\r\n        this.curTime.innerHTML = curtime;\r\n       \r\n        //获取父元素的宽度\r\n    \r\n        //进度掉\r\n        this.frontBg.style.width = per *100 +'%';\r\n       \r\n        //小圆行运行距离\r\n        // this.circle\r\n       \r\n        let l = this.circle.parentNode.offsetWidth * per;\r\n        this.circle.style.transform = 'translateX(' + l + 'px)';\r\n    },\r\n    //进度条停止\r\n    stop(){\r\n        this.stopTime = new Date().getTime();\r\n        //点击暂停时的百分比,+号代表以前点击的百分\r\n     \r\n        this.endPer  += (this.stopTime - this.startTime)/(this.allTime*1000);\r\n      \r\n        //清理定时器\r\n        cancelAnimationFrame(this.timer);\r\n    }\r\n}\r\n//拖拽元素\r\nfunction Drag(obj){\r\n    //要拖拽的dom元素\r\n    this.obj = obj;\r\n    //拖拽时按下的位置\r\n    this.startPointX = 0;\r\n    //按下时已经走的位置\r\n    this.startLeft = 0;\r\n    //移动的百分比\r\n    this.per = 0;\r\n    this.init();\r\n}\r\nDrag.prototype={\r\n    init(){\r\n        const That = this;\r\n        //获得进度条背景\r\n        this.backBg = document.querySelector('.backBg');\r\n        console.log(this.backBg)\r\n        this.obj.style.transform = 'translateX(0)';\r\n        this.obj.addEventListener('touchstart',function(ev){\r\n           //第一根手指按下的位置\r\n           \r\n           That.startPointX = ev.changedTouches[0].pageX;\r\n            //得到已经走了的位置,得到字符串0);\r\n      \r\n            That.startLeft = parseFloat(this.style.transform.split('(')[1]);\r\n            That.start && That.start();\r\n        });\r\n        this.backBg.addEventListener('touchstart',function(ev){\r\n            That.Bgx = ev.changedTouches[0].pageX;\r\n            console.log(That.Bgx)\r\n        })\r\n\r\n        this.obj.addEventListener('touchmove',function(ev){\r\n            //得到拖拽的距离\r\n            let disX = ev.changedTouches[0].pageX - That.startPointX;\r\n   \r\n            //小圆点要走的距离\r\n            let l = That.startLeft + disX;\r\n           if(l<0){\r\n               //往左拖拽\r\n               l = 0;\r\n           }else if(l>this.parentNode.offsetWidth){\r\n               l = this.parentNode.offsetWidth\r\n           }\r\n            this.style.transform = 'translaeX('+l+'px)';\r\n            //计算百分比\r\n            That.per = l/this.parentNode.offsetWidth;\r\n            That.move & That.move(That.per);\r\n            ev.preventDefault();\r\n        })\r\n        this.obj.addEventListener('touchend',function(){\r\n            That.end && That.end(That.per);\r\n        })\r\n    }\r\n}\r\nexport default {\r\n    pro: Progress,\r\n    drag:Drag,\r\n}","import '../public/js/gaussBlur'\r\n/**\r\n * 渲染模块\r\n */\r\n\r\n//渲染背景图片\r\n function renderImg(src){\r\n\r\n    window.player.blurImg(src);\r\n    const img = document.querySelector('.songImg img')\r\n    img.src = src;\r\n}\r\n//渲染音乐信息 \r\n  function renderInfo(data){\r\n    const songInfo = document.querySelector('.songInfo').children;\r\n    songInfo[0].innerHTML = data.name;\r\n    songInfo[1].innerHTML = data.album;\r\n    songInfo[2].innerHTML = data.singer;\r\n}\r\n// //渲染是否喜欢\r\n function renderIsLike(data){\r\n    const isLike = document.querySelector('.control').children;\r\n    isLike[0].className = data?'liking':'';\r\n}\r\nexport default function(data){\r\n    console.log(data)\r\n    renderImg(data.image);\r\n    renderInfo(data);\r\n    renderIsLike(data.isLike);\r\n}\r\n","/**\r\n * 列表控制\r\n * wrap:添加的容器\r\n * data:传递过来的歌曲数据\r\n */\r\n\r\n\r\n\r\n function listControl(wrap,data){\r\n     //创建元素\r\n     const div = document.createElement('div');\r\n     const dl = document.createElement('dl');\r\n     const dt = document.createElement('dt');\r\n     const close = document.createElement('div');\r\n     //用于存储所有歌曲的dom\r\n     const musicList = [];\r\n     div.className = 'list';\r\n     dt.innerHTML = '播放列表';\r\n     close.innerHTML = '关闭';\r\n     close.className = 'close'\r\n\r\n     //添加元素\r\n     dl.appendChild(dt);\r\n     data.forEach((item,index) => {\r\n         const dd = document.createElement('dd');\r\n         dd.innerHTML = item.name\r\n\r\n         //给每一个dd添加点击事件\r\n         dd.addEventListener('touchend',function(){\r\n             changeselect(index);\r\n         })\r\n         dl.appendChild(dd);\r\n         musicList.push(dd);\r\n     });\r\n     changeselect(0);\r\n     div.appendChild(dl);\r\n     div.appendChild(close);\r\n     wrap.appendChild(div);\r\n     const disY = div.offsetHeight;\r\n     close.addEventListener('touchend',slideDown)\r\n     //改变选中歌曲\r\n     function changeselect(index){\r\n        for(let i =0; i<musicList.length;i++){\r\n            musicList[i].className = '';\r\n        }\r\n        musicList[index].className = 'active'\r\n    }\r\n    //列表下滑\r\n    function slideDown(){\r\n        div.style.transition = '.2s'\r\n        div.style.transform='translateY('+disY+'px)';\r\n    }\r\n    //列表上滑\r\n    function slideUp(){\r\n        console.log(disY)\r\n        div.style.transition = '.2s';\r\n        div.style.transform = 'translateY('+0+'px)';\r\n    }\r\n     return {\r\n         musicList,\r\n         slideUp:slideUp,\r\n         changeselect,\r\n         slideDown,\r\n   \r\n     }\r\n }\r\n\r\n\r\n export default {\r\n     listControl,\r\n }","function Index(len){\r\n    //刚开始的所以\r\n     this.index = 0;\r\n     this.len = len;\r\n}\r\nIndex.prototype = {\r\n    //上一首\r\n    pre(){\r\n        return this.getIndex(1)\r\n    },\r\n    //下一首\r\n    next(){\r\n        return this.getIndex(-1);\r\n    },\r\n    /**\r\n     * \r\n     * @param {*} num 代表上一首还是下一首 \r\n     *\r\n     * @param {*} len 代表数据长度\r\n     */\r\n    getIndex(num,len){\r\n        this.index = (num + this.index +this.len) % this.len\r\n        return this.index;\r\n    }\r\n}\r\n\r\nexport default {\r\n    Index,\r\n}","(function (root) {\r\n\tfunction gaussBlur(imgData) {\r\n\t\tvar pixes = imgData.data;\r\n\t\tvar width = imgData.width;\r\n\t\tvar height = imgData.height;\r\n\t\tvar gaussMatrix = [],\r\n\t\t\tgaussSum = 0,\r\n\t\t\tx, y,\r\n\t\t\tr, g, b, a,\r\n\t\t\ti, j, k, len;\r\n\r\n\t\tvar radius = 10;\r\n\t\tvar sigma = 5;\r\n\r\n\t\ta = 1 / (Math.sqrt(2 * Math.PI) * sigma);\r\n\t\tb = -1 / (2 * sigma * sigma);\r\n\t\t//生成高斯矩阵\r\n\t\tfor (i = 0, x = -radius; x <= radius; x++, i++) {\r\n\t\t\tg = a * Math.exp(b * x * x);\r\n\t\t\tgaussMatrix[i] = g;\r\n\t\t\tgaussSum += g;\r\n\r\n\t\t}\r\n\t\t//归一化, 保证高斯矩阵的值在[0,1]之间\r\n\t\tfor (i = 0, len = gaussMatrix.length; i < len; i++) {\r\n\t\t\tgaussMatrix[i] /= gaussSum;\r\n\t\t}\r\n\t\t//x 方向一维高斯运算\r\n\t\tfor (y = 0; y < height; y++) {\r\n\t\t\tfor (x = 0; x < width; x++) {\r\n\t\t\t\tr = g = b = a = 0;\r\n\t\t\t\tgaussSum = 0;\r\n\t\t\t\tfor (j = -radius; j <= radius; j++) {\r\n\t\t\t\t\tk = x + j;\r\n\t\t\t\t\tif (k >= 0 && k < width) {//确保 k 没超出 x 的范围\r\n\t\t\t\t\t\t//r,g,b,a 四个一组\r\n\t\t\t\t\t\ti = (y * width + k) * 4;\r\n\t\t\t\t\t\tr += pixes[i] * gaussMatrix[j + radius];\r\n\t\t\t\t\t\tg += pixes[i + 1] * gaussMatrix[j + radius];\r\n\t\t\t\t\t\tb += pixes[i + 2] * gaussMatrix[j + radius];\r\n\t\t\t\t\t\t// a += pixes[i + 3] * gaussMatrix[j];\r\n\t\t\t\t\t\tgaussSum += gaussMatrix[j + radius];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ti = (y * width + x) * 4;\r\n\t\t\t\t// 除以 gaussSum 是为了消除处于边缘的像素, 高斯运算不足的问题\r\n\t\t\t\t// console.log(gaussSum)\r\n\t\t\t\tpixes[i] = r / gaussSum;\r\n\t\t\t\tpixes[i + 1] = g / gaussSum;\r\n\t\t\t\tpixes[i + 2] = b / gaussSum;\r\n\t\t\t\t// pixes[i + 3] = a ;\r\n\t\t\t}\r\n\t\t}\r\n\t\t//y 方向一维高斯运算\r\n\t\tfor (x = 0; x < width; x++) {\r\n\t\t\tfor (y = 0; y < height; y++) {\r\n\t\t\t\tr = g = b = a = 0;\r\n\t\t\t\tgaussSum = 0;\r\n\t\t\t\tfor (j = -radius; j <= radius; j++) {\r\n\t\t\t\t\tk = y + j;\r\n\t\t\t\t\tif (k >= 0 && k < height) {//确保 k 没超出 y 的范围\r\n\t\t\t\t\t\ti = (k * width + x) * 4;\r\n\t\t\t\t\t\tr += pixes[i] * gaussMatrix[j + radius];\r\n\t\t\t\t\t\tg += pixes[i + 1] * gaussMatrix[j + radius];\r\n\t\t\t\t\t\tb += pixes[i + 2] * gaussMatrix[j + radius];\r\n\t\t\t\t\t\t// a += pixes[i + 3] * gaussMatrix[j];\r\n\t\t\t\t\t\tgaussSum += gaussMatrix[j + radius];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ti = (y * width + x) * 4;\r\n\t\t\t\tpixes[i] = r / gaussSum;\r\n\t\t\t\tpixes[i + 1] = g / gaussSum;\r\n\t\t\t\tpixes[i + 2] = b / gaussSum;\r\n\t\t\t}\r\n\t\t}\r\n\t\t//end\r\n\t\treturn imgData;\r\n\t}\r\n\r\n\t//1、增加了第二个参数\r\n\tfunction blurImg(src, ele) {\r\n\t\tvar canvas = document.createElement('canvas');\r\n\t\tele=ele||document.body;\r\n\t\t\r\n\t\t//2、这两个值越小，图片就会越模糊\r\n\t\tcanvas.width=100;\r\n\t\tcanvas.height=100;\r\n\r\n\t\tvar context = canvas.getContext('2d');\r\n\r\n\t\t//3、把img对象放到了这里\r\n\t\tvar img = new Image();\r\n\t\timg.src = src;\r\n\t\timg.onload = function () {\r\n\t\t\tcontext.drawImage(img, 0, 0, img.width, img.height, 0, 0, canvas.width, canvas.height);\r\n\t\t\tvar imgData=context.getImageData(0, 0, canvas.width, canvas.height);\r\n\t\t\tvar gaussData=gaussBlur(imgData);\r\n\t\t\tcontext.putImageData(gaussData, 0, 0);\r\n\t\t\tvar imgSrc = canvas.toDataURL();\r\n\r\n\t\t\tele.style.backgroundImage='url('+imgSrc+')';\r\n\t\t}\r\n\t}\r\n\r\n\troot.blurImg = blurImg;\r\n})(window.player || (window.player = {}));\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './css/index.less'\r\nimport Music from './js/Music'\r\nMusic.init();"],"sourceRoot":""}